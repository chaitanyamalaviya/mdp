package mdp_Algorithm;

import java.awt.Color;
import java.awt.Container;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;


public class Maze extends JFrame{
	JFrame frame = new JFrame();
	public Maze(){
		super("Grid");
		mazeUI();
		Buttons();
	}
	
	private void mazeUI(){
		setSize(510, 660);
        setResizable(false);
        setLayout(new GridLayout(22, 17, 3, 3));
        JLabel[][] cells = new JLabel[22][17];
        
        for (int x = 0;x<22;x++){
        	for (int y = 0;y<17;y++){
        		cells[x][y]=new JLabel("");
        		cells[x][y].setOpaque(true);
	          
        		//Colour cells
        		if(((x==1 || x==2 || x==3) && (y==13 || y==14 || y==15)) || ((x==18 || x==19 || x==20) && (y==1 || y==2 || y==3)))
                	cells[x][y].setBackground(Color.WHITE);
        		else if(x==0 || x==21 || y==0 || y==16)
                	cells[x][y].setBackground(new Color(64,64,64));
        		else{
	                	cells[x][y].setBackground(new Color(198,217,241));
        			
        			//onClick
                    cells[x][y].addMouseListener(new MouseAdapter() {
    	               	@Override
    	               	public void mouseClicked(MouseEvent e) {
    	                    JLabel clickedPanel = (JLabel) e.getSource();
    	                    //Toggle colours    
    	                    if (clickedPanel.getBackground()==new Color(64,64,64))
    	                        clickedPanel.setBackground(new Color(198,217,241));
    	                    else 
    	                        clickedPanel.setBackground(new Color(64,64,64));
    	                }
    	             });
        		}
	        }
        }
        for (int x = 0;x<22;x++){
        	for (int y = 0;y<17;y++){
        		add(cells[x][y]);
        	}
        }
	}
	
	private void Buttons(){
		Container pane = getContentPane();
        GroupLayout gl = new GroupLayout(pane);
        pane.setLayout(gl);

        JButton quitButton = new JButton("Quit");
        JButton quitButton2 = new JButton("Quit");

        quitButton2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent event) {
                System.out.print("yes");
            }
        });
        
        quitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent event) {
                System.exit(0);
            }
        });

        gl.setAutoCreateContainerGaps(true);
        
        gl.setHorizontalGroup(gl.createSequentialGroup()
        		.addComponent(quitButton)
        		.addComponent(quitButton2)
        );

        gl.setVerticalGroup(gl.createSequentialGroup()
                .addComponent(quitButton)
                .addComponent(quitButton2)
        );
        
        pack();
	}
	
	public static void main(String[] args) {
	
	    EventQueue.invokeLater(new Runnable() {
	        @Override
	        public void run() {
	        	Maze maze = new Maze();
	        	maze.setVisible(true);
	        }
	    });
	}
}